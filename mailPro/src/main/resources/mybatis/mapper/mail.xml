<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gdu.mail.mapper.MailMapper">
	
	<resultMap type="MailDTO" id="MailMap">
		<result column="MAIL_NO" property="mailNo" />
		<result column="EMP_NO" property="empNo" />
		<result column="SENDER" property="sender" />
		<result column="SUBJECT" property="subject" />
		<result column="MAIL_CONTENT" property="mailContent" />
		<result column="SEND_DATE" property="sendDate" />
		<result column="SEND_STATUS" property="sendStatus" />
		<result column="TAG_NO" property="tagNo" />
		<result column="READ_CHECK" property="readCheck" />
		<result column="DELETE_CHECK" property="deleteCheck" />
		<result column="RECEIVE_TYPE" property="receiveType" />
	</resultMap>

	
	<insert id="insertJamesUser" parameterType="EmpAddrDTO">
		INSERT INTO JAMES_USER
			(USER_NAME, PASSWORD_HASH_ALGORITHM, PASSWORD, VERSION)
		VALUES
			(#{email}, 'NONE', #{password}, 1)
	</insert>
	
	<select id="selectMailByMap" parameterType="map" resultType="MailDTO">
		SELECT MAIL_NO, EMP_NO, SENDER, SUBJECT, MAIL_CONTENT, SEND_DATE, SEND_STATUS, TAG_NO
		  FROM MAIL
		  <where>
		  	<if test="email != null">AND SENDER = #{email}</if>
		  	<if test="mailNo != null">AND MAIL_NO = #{mailNo}</if>
		  </where>
	</select>
	
	<insert id="insertMail" parameterType="MailDTO">
		INSERT INTO MAIL
			(MAIL_NO, EMP_NO, SENDER, SUBJECT, MAIL_CONTENT, SEND_DATE, SEND_STATUS, TAG_NO)
		VALUES
			(MAIL_SEQ.NEXTVAL, #{empNo}, #{from}, #{subject}, #{mailContent}, SYSDATE, NULL, 0)
	</insert>
	
	<insert id="insertReceivers" parameterType="map">
		INSERT INTO RECEIVERS
			(EMP_NO, MAIL_NO, READ_CHECK, DELETE_CHECK, RECEIVE_TYPE)
		VALUES
			(#{empNo}, MAIL_SEQ.CURRVAL, 'N', 'N', #{receiveType})
	</insert>
	
	<select id="selectReceiveMailCount" parameterType="map" resultType="int">
		SELECT COUNT(*)
 		  FROM MAIL M INNER JOIN RECEIVERS R
    		ON M.MAIL_NO = R.MAIL_NO
 		 WHERE R.DELETE_CHECK = #{deleteCheck}
   		   AND R.EMP_NO = #{empNo}
   		   AND R.RECEIVE_TYPE = 'To'
            OR R.RECEIVE_TYPE = 'cc'
           <if test="trash=='true'">OR R.RECEIVE_TYPE = 'send'</if>
	</select>
	
	<select id="selectReceiveMailList" parameterType="map" resultMap="MailMap">
		SELECT B.MAIL_NO, B.EMP_NO, B.SENDER, B.SUBJECT, B.MAIL_CONTENT, B.SEND_DATE, B.SEND_STATUS, B.TAG_NO, B.READ_CHECK, B.DELETE_CHECK
  		  FROM (SELECT ROW_NUMBER() OVER(ORDER BY A.SEND_DATE DESC) AS RN, A.MAIL_NO, A.EMP_NO, A.SENDER, A.SUBJECT, A.MAIL_CONTENT, A.SEND_DATE, A.SEND_STATUS, A.TAG_NO, A.READ_CHECK, A.DELETE_CHECK
          		  FROM (SELECT M.MAIL_NO, M.EMP_NO, M.SENDER, M.SUBJECT, M.MAIL_CONTENT, M.SEND_DATE, M.SEND_STATUS, M.TAG_NO, R.READ_CHECK, R.DELETE_CHECK
                  		  FROM MAIL M INNER JOIN RECEIVERS R
                    		ON M.MAIL_NO = R.MAIL_NO
                 		 WHERE R.DELETE_CHECK = #{deleteCheck}
                   		   AND R.EMP_NO = #{empNo}
                   		   AND R.RECEIVE_TYPE = 'To'
                   		    OR R.RECEIVE_TYPE = 'cc'
                   		    <if test="trash=='true'">OR R.RECEIVE_TYPE = 'send'</if>) A ) B
 		 WHERE B.RN BETWEEN #{begin} AND #{end}
	</select>
	
	<select id="selectSendMailCount" parameterType="map" resultType="int">
		SELECT COUNT(*)
 		  FROM MAIL M INNER JOIN RECEIVERS R
    		ON M.MAIL_NO = R.MAIL_NO
 		 WHERE R.DELETE_CHECK = #{deleteCheck}
   		   AND R.EMP_NO = #{empNo}
   		   AND R.RECEIVE_TYPE = 'send'
	</select>
	
	<select id="selectSendMailList" parameterType="map" resultMap="MailMap">
		SELECT B.MAIL_NO, B.EMP_NO, B.SENDER, B.SUBJECT, B.MAIL_CONTENT, B.SEND_DATE, B.SEND_STATUS, B.TAG_NO, B.READ_CHECK, B.DELETE_CHECK
  		  FROM (SELECT ROW_NUMBER() OVER(ORDER BY A.SEND_DATE DESC) AS RN, A.MAIL_NO, A.EMP_NO, A.SENDER, A.SUBJECT, A.MAIL_CONTENT, A.SEND_DATE, A.SEND_STATUS, A.TAG_NO, A.READ_CHECK, A.DELETE_CHECK
          		  FROM (SELECT M.MAIL_NO, M.EMP_NO, M.SENDER, M.SUBJECT, M.MAIL_CONTENT, M.SEND_DATE, M.SEND_STATUS, M.TAG_NO, R.READ_CHECK, R.DELETE_CHECK
                  		  FROM MAIL M INNER JOIN RECEIVERS R
                    		ON M.MAIL_NO = R.MAIL_NO
                 		 WHERE R.DELETE_CHECK = #{deleteCheck}
                   		   AND R.EMP_NO = #{empNo}
                   		   AND R.RECEIVE_TYPE = 'send') A ) B
 		 WHERE B.RN BETWEEN #{begin} AND #{end}
	</select>
	
	<select id="selectReadNotReceiveCount" parameterType="map" resultType="int">
		SELECT COUNT(*)
 		  FROM MAIL M INNER JOIN RECEIVERS R
    		ON M.MAIL_NO = R.MAIL_NO
 		 WHERE R.DELETE_CHECK = #{deleteCheck}
   		   AND R.READ_CHECK = 'N'
   		   AND R.EMP_NO = #{empNo}
   		   AND R.RECEIVE_TYPE = 'To'
 		    OR R.RECEIVE_TYPE = 'cc'
	</select>
	
	<select id="selectReceiverList" parameterType="int" resultType="ReceiversDTO">
		SELECT EMP_NO, MAIL_NO, READ_CHECK, DELETE_CHECK, RECEIVE_TYPE
  		  FROM RECEIVERS
 		 WHERE MAIL_NO = #{mailNo}
 		   AND RECEIVE_TYPE = 'To'
 		    OR RECEIVE_TYPE = 'cc'
	</select>
	
	<select id="selectReceiverByMap" parameterType="map" resultType="ReceiversDTO">
		SELECT EMP_NO, MAIL_NO, READ_CHECK, DELETE_CHECK, RECEIVE_TYPE
		  FROM RECEIVERS
 		 WHERE MAIL_NO = #{mailNo}
 		   AND EMP_NO = #{empNo}
 		   AND RECEIVE_TYPE = 'To'
 		    OR RECEIVE_TYPE = 'cc'
	</select>
	
	<select id="selectSendReceiverByMap" parameterType="map" resultType="ReceiversDTO">
		SELECT EMP_NO, MAIL_NO, READ_CHECK, DELETE_CHECK, RECEIVE_TYPE
		  FROM RECEIVERS
 		 WHERE MAIL_NO = #{mailNo}
 		   AND EMP_NO = #{empNo}
 		   AND RECEIVE_TYPE = 'send'
	</select>
	
	<update id="updateCheckByMap" parameterType="map">
		UPDATE RECEIVERS
		   SET ${checkType} = #{check}
		 WHERE MAIL_NO = #{mailNo}
 		   AND EMP_NO = #{empNo}
	</update>
	
	<select id="selectReadNotSendCount" parameterType="int" resultType="int">
		SELECT COUNT(*)
 		  FROM MAIL M INNER JOIN RECEIVERS R
    		ON M.MAIL_NO = R.MAIL_NO
 		 WHERE R.DELETE_CHECK = 'N'
   		   AND R.READ_CHECK = 'N'
   		   AND R.RECEIVE_TYPE = 'send'
   		   AND R.EMP_NO = #{empNo}
	</select>

</mapper>